---
title: "Cruise Report: 2022-07-18 : 07-21"
subtitle: "Pot survey"
author: "Mike O'Brien (UMCES)"
format:
    html:
      self-contained: true
echo: false
editor: visual
---

```{r, setup, include=FALSE}
knitr::opts_knit$set(root.dir = 'c:/users/darpa2/analysis/bsb-trap-survey')
```

```{r}
#| message: false
#| warning: false
#| label: packages
library(sf); library(dplyr); library(leaflet); library(targets); library(xml2)
library(readxl); library(ggplot2); library(plotly); library(gt)

```

```{r}
#| label: geo-base
wms_enc <- 'https://gis.charttools.noaa.gov/arcgis/rest/services/MCS/ENCOnline/MapServer/exts/MaritimeChartService/WMSServer'

tar_load(towers)
zones <- st_read(tar_read(wea_spatial), layer = 'buildout zones', quiet = T)
ctrl_area <- st_read(tar_read(wea_spatial), layer = 'control area', quiet = T)
```

```{r}
#| label: waypoints
pts <- read_sf('data/gps/2207/repaired/pot/waypoints_repaired_20220718.gpx',
               layer = 'waypoints') |> 
  mutate(grp = case_when(grepl('C.*-1', name) ~ 'Control 1',
                         grepl('C.*-2', name) ~ 'Control 2',
                         T ~ gsub(' .*', '', name)),
         action = case_when(grepl('deploy', name) ~ 'Deployment',
                            grepl('recover', name) ~ 'Recovery',
                            T ~ 'Target'))
```

```{r}
#| warning: false
#| label: tracks
gpx_ext_fix <- function(x){
  base <- x |> 
    as.character() |> 
    read_html() |>  
    xml_contents() |> 
    xml_children()
  
  conts <- base |> 
    xml_text() |> 
    as.list() |> 
    data.frame() 
  
  names(conts) <- xml_name(base)
  
  conts
}

tracks <- lapply(list.files('data/gps/2207/raw/pot', full.names = T,
                            pattern = '^Track.*gpx'),
                     st_read, layer = 'tracks', quiet = T) |>
    bind_rows() |>
  
  # pull out "fit" information
  rowwise() |>
  mutate(gpx_ext_fix(gpxtrkx_TrackStatsExtension),
         gpx_ext_fix(gpxx_TrackExtension)) |> 
  select_at(vars(-starts_with('gpx'))) |> 
  st_cast('LINESTRING') |> 
  mutate(displaycolor = ifelse(grepl('-20 ', name),
                                      gsub('Cyan', 'Magenta', displaycolor),
                                      displaycolor))
```

```{r}
#| label: recorded-data
cpue <- read_excel('embargo/pot_data/pot survey recorded data.xlsx',
                   sheet = 'CPUE',
                   na = c('', 'NA')) |> 
  rename_all(function(.) tolower(gsub('[ \\/]', '_', .)))

cpue_202207 <- cpue |> 
  filter(between(recover_date,
                 as.POSIXct('2022-07-19'),
                 as.POSIXct('2022-07-21'))) |> 
  mutate(species = factor(species,
                          levels = c('black sea bass', 'seahorse', 'jonah crab',
                                     'sand dollar', 'sea star', NA),
                          ordered = T)) 
cpue_tally <- cpue_202207 |>
  group_by(species) |>
  tally()

n_pots <- cpue_202207 |>
  group_by(station) |>
  distinct(pot_number) |>
  nrow()


measurements <- read_excel('embargo/pot_data/pot survey recorded data.xlsx',
                            sheet = 'Measurements',
                           na = c('', 'NA')) |> 
  rename_all(function(.) tolower(gsub('[ \\/]', '_', .))) |> 
  filter(between(date,
                 as.POSIXct('2022-07-19'),
                 as.POSIXct('2022-07-21'))) 

stations <- read_excel('embargo/pot_data/pot survey recorded data.xlsx',
                            sheet = 'Station') |> 
  rename_all(tolower) |> 
  mutate(datetime = as.POSIXct(gsub(':00$', '00', datetime), 
                               format = '%Y-%m-%dT%T %z')) |> 
  filter(between(datetime,
                 as.POSIXct('2022-07-19'),
                 as.POSIXct('2022-07-21'))) 
```

## Participants

-   Dave Secor (UMCES)
-   Mike O'Brien (UMCES)
-   Capt. Brendan Harrington (*F/V Integrity*)
-   Reilly (*F/V Integrity*, mate)

## Pot deployment cruise, 2022-07-19

### Overall

-   06:30 Meet at *F/V Integrity*, load remaining gear and prepare for departure
-   06:40 Depart dock, transit to **C0622_1** (randomly-selected control site)
-   09:09 Arrive at **C0622_1**
    -   09:10 Begin deploying pots
    -   09:13 Finish deploying pots, transit to **C0622_2** (randomly-selected control site)
-   09:35 Arrive at **C0622_2**, begin deploying pots
    -   09:38 Begin deploying pots
    -   09:42 Finish deploying pots, transit to **A-5-2** (experimental turbine site)
-   10:13 Arrive at **A-5-2**, begin deploying pots
    -   10:16 Begin deploying pots
    -   10:19 Finish deploying pots, transit to **A-9-6** (experimental turbine site)
-   10:40 Arrive at **A-9-6**, begin deploying pots
    -   10:42 Begin deploying pots
    -   10:45 Finish deploying pots, transit to **A-9-2** (experimental turbine site)
-   11:12 Arrive at **A-9-2**, begin deploying pots
    -   11:14 Begin deploying pots
    -   11:17 Finish deploying pots, return to West Ocean City, MD
-   13:37 Arrive in West Ocean City, MD

### Description

#### Survey deployment

Wind speed was \<5 knots, coming from the southwest (as reported by Capt. Harrington). Waves were 3-4 ft with swells near 5 feet. Cloud cover was 3 tenths of the sky. Control sites ranged in depth from 110 - 110 ft, with turbine sites ranging from 90 - 110 ft.

During transit to the first site, the *Integrity*'s speed was 7.1 - 8.9 kts, with an average of speed of 7.86 kts.

Capt. B. Harrington and mate stacked the pots on the boat starting at 04:00 on July 19. Ground line between pots was coiled and placed into the next pot in the sequence. At least two pots were accidentially not attached to the ground line during this process. This may have been part of the reason for pot losses noted during [recovery](#pot-recovery-description).

## Pot recovery cruise, 2022-06-30

### Overall

-   02:30 Meet at *F/V Integrity*, await arrival of captain and mate
-   03:21 Mate does not show. Depart dock, transit to **C0622_1**
-   05:46 Arrive **C0622_1**.
    -   05:51 Northern trawl anchor ("block") recovered.
    -   06:02 Pot recovery complete. Transit to **C0622_2**.
-   06:34 Arrive **C0622_2**. Begin pot recovery approach.
    -   06:35 Northern block recovered.
    -   06:46 Pot recovery complete. Transit to **A-5-2**.
-   07:29 Arrive **A-5-2**. Begin pot recovery approach.
    -   07:31 Western block recovered.
    -   07:41 Southern block recovered; pot recovery complete. Transit to **A-9-6**.
-   08:12 Arrive **A-9-6**. Begin pot recovery approach.
    -   08:13 Northern block recovered.
    -   08:23 Pot recovery complete. Transit to **A-9-2**.
-   09:05 Arrive **A-9-2**. Begin pot recovery approach.
    -   09:06 Northern block recovered.
    -   09:18 Pot recovery complete. Return to West Ocean City, MD.
-   12:00 Arrive in West Ocean City, MD.

### Description {#pot-recovery-description}

Dock departure was pushed back an hour due as the vessel's mate did not show up. B. Harrington and D. Secor decided to depart without a mate after waiting for 1 hour. Wind speed was \<5 knots, coming from the southwest (as reported by Capt. Harrington). Waves were 2 feet. Cloud cover was 0-1 tenths of the sky.

Pots were recovered in the same manner as in the 2022-06-27 report.

M. O'Brien pulled pots onboard with the assistance of Capt. B. Harrington, reporting catch per species, per pot to D. Secor. Fish from the first 5 pots were placed in the "near" tote with fish from the subsequent 10 pots placed in the "far" tote; this was in error, as the first *six* and last *9* pots were supposed to be combined according to experimental protocol. Due to how the pot strings were recovered, the "near" pots were the northernmost pots, and the "far" pots the southernmost.

Dominant species were black sea bass (`r filter(cpue_tally, species == 'black sea bass')$n`) and Jonah Crab (`r filter(cpue_tally, species == 'jonah crab')$n`), with sand dollars, sea stars, and one seahorse also present. `r filter(cpue_tally, is.na(species))$n` of the `r n_pots` recovered pots were empty. There was no significant difference in black sea bass catch between control and turbine sites or near and far sections of the lines ($\chi$-squared, $p >$ 0.05).

Total length (mm) and weight (g) of all black sea bass were recorded, culling the first five from each "near" and "far" section and releasing the others. Total lengths of other fish species were also recorded. Black sea bass ranged in total length from `r min(measurements$tl_mm, na.rm = T)` - `r max(measurements$tl_mm, na.rm = T)` mm, with a mean of `r floor(mean(measurements$tl_mm, na.rm = T))` mm (minimum legal size 280 mm). Weights ranged from `r min(measurements$wt_g, na.rm = T)` - `r max(measurements$wt_g, na.rm = T)` g, mean of `r floor(mean(measurements$wt_g, na.rm = T))` g. There were no significant differences in length or weight between control and turbine sites or near and far sections of the lines (ANOVA, $p >$ 0.05).

Catch and size data summaries are shown in the [sample summary section](#sample-summary) below.

## Station information

```{r}
#| label: station-info
stations |>
  gt(groupname_col = 'type',
     rowname_col = 'station') |> 
  fmt_number(columns = starts_with(c('lon', 'lat')),
             decimals = 5) |> 
  tab_options(table.font.size = 10) |> 
  as_raw_html()
```

## Cruise map {#cruise-map}

```{r}
#| label: cruise-map
leaflet() |> 
  setView(lng = -74.9, lat = 38.25, zoom = 10) |> 
  addWMSTiles(
    wms_enc,
    layers = c(0:3, 6),
    options = WMSTileOptions(format = "image/png", transparent = T)
  ) |>
  addCircleMarkers(data = pts, label = ~ name,
                   clusterId = ~ grp,
                   color = ~ colorFactor(c('red', 'blue', 'green'), pts$action)(action),
                   clusterOptions = markerClusterOptions(
                     disableClusteringAtZoom = 15,
                     zoomToBoundsOnClick = T),
                   group = 'Waypoints') |> 
  addPolylines(data = filter(tracks, grepl('07-19', name)),
               color = ~ 'Magenta',
               group = 'Deployment tracks') |>
  addPolylines(data = filter(tracks, grepl('07-20', name)),
               color = 'Cyan',
               group = 'Recovery tracks') |>
  addPolygons(data = zones, color = c('red', 'yellow', 'green'),
              group = 'Development Zone') |>
  addPolygons(data = ctrl_area, color = 'gray', group = 'Control Zone') |>
  addCircles(data = towers,
             color = 'red', radius = 20, group = 'Turbines') |> 
  addLayersControl(overlayGroups = c('Waypoints', 'Deployment tracks', 'Recovery tracks',
                                     'Turbines', 'Development Zone', 'Control Zone'),
                   options = layersControlOptions(collapsed = FALSE)) |>
  addMeasure(primaryLengthUnit = 'meters', primaryAreaUnit = 'hectares') |>
  addMiniMap(zoomLevelFixed = 7)
```

## Sample summary {#sample-summary}

### Catch

```{r}
#| message: false
cpue |> 
  mutate(stratum = ifelse(grepl('^C', station), 'Control', 'Project'),
         month = month.name[data.table::month(recover_date)],
         month = factor(month, levels = month.name, ordered = T)) |> 
  filter(species == 'black sea bass') |> 
  group_by(month, stratum, near_far) |> 
  summarise(N = sum(catch, na.rm = T),
            min = min(catch, na.rm = T),
            average = round(mean(catch, na.rm = T),1),
            max = max(catch, na.rm = T),
            sd = round(sd(catch, na.rm = T), 2)) |>
  gt(groupname_col = c('month', 'stratum'),
     rowname_col = c('near_far')) |> 
  tab_options(row_group.as_column = TRUE) |> 
  summary_rows(groups = T, fns = c(Total = 'sum'),
               columns = N, missing_text = '',
               decimals = 0) |> 
  as_raw_html()
  
```

#### July 2022 catch

The blank bars on the right show the count of pots with no catch.

```{r}
#| label: catch-plot
ggplotly(
  ggplot(data = cpue_202207) +
    geom_bar(aes(x = species)) +
    scale_y_continuous(breaks = seq(0, 10, 2)) +
    facet_grid(station ~ near_far) +
    theme(axis.text.x = element_text(angle = -30))
)
```

### Fish measurements

#### Total length (mm)

```{r}
#| label: length-plot
ggplotly(
  ggplot(data = filter(measurements, species == 'black sea bass')) +
    geom_histogram(aes(x = tl_mm, fill = retained), binwidth = 10) +
    facet_grid(station ~ near_far) 
)
```

#### Weight (g)

```{r}
#| warning: false
#| label: weight-plot
ggplotly(
  ggplot(data = filter(measurements, species == 'black sea bass')) +
    geom_histogram(aes(x = wt_g, fill = retained), binwidth = 20) +
    facet_grid(station ~ near_far)
)
```
